---
import type { HTMLTag, Polymorphic } from 'astro/types';

type HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5';

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  extendedClass: string;
}>;
const { as: Tag, extendedClass, ...props } = Astro.props;

const classByTag: Record<HeadingTag, string> = {
  h1: 'font-display text-4xl font-bold text-primary-600 dark:text-primary-100 sm:text-5xl',
  h2: 'font-display text-2xl font-bold text-primary-600 dark:text-primary-100 sm:text-3xl',
  h3: 'font-display text-xl font-bold text-primary-600 dark:text-primary-100 sm:text-2xl',
  h4: 'font-display text-lg font-bold text-primary-600 dark:text-primary-100 sm:text-xl',
  h5: 'font-display text-sm font-bold text-primary-600 dark:text-primary-100 sm:text-lg',
};

console.log(Tag);
---

<Tag {...props} class:list={[classByTag[Tag as HeadingTag], extendedClass]}>
  <slot />
</Tag>
