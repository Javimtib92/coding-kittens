---
import { cn } from '~/utils/cn';
import { getCollection } from 'astro:content';
import { getRelativeLocaleUrl } from 'astro:i18n';

const categories: string[] = [];
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true;
});

for (const post of posts) {
  const category = post.id.split('/')[0];

  if (!categories.includes(category)) {
    categories.push(category);
  }
}

const pathname = new URL(Astro.request.url).pathname;
const segments = pathname.split('/');

const categorySegment = segments[2];

const activeClass =
  'bg-accent-secondary-500 focus:ring-accent-secondary-300 dark:focus:ring-accent-secondary-700';
const inactiveClass =
  'bg-primary-300 dark:bg-primary-800 hover:bg-primary-400 dark:hover:bg-primary-500 focus:ring-primary-300 dark:focus:ring-primary-600';

const locale = Astro.currentLocale || 'en';
---

<div class='mb-4 flex flex-shrink flex-row flex-wrap'>
  <div class='h-auto'>
    <a
      href={getRelativeLocaleUrl(locale, `/blog`)}
      class={cn(
        typeof categorySegment === 'undefined' || categorySegment === ''
          ? activeClass
          : inactiveClass,
        'mb-2 me-2 inline-block rounded-lg px-5 py-2.5 font-mono text-sm font-medium text-white focus:outline-none focus:ring-4'
      )}
    >
      All
    </a>
    {
      categories.map((category) => {
        return (
          <a
            href={getRelativeLocaleUrl(locale, `/blog/${category}`)}
            class={cn(
              categorySegment === category ? activeClass : inactiveClass,
              'mb-2 me-2 inline-block h-10 rounded-lg px-5 py-2.5 font-mono text-sm font-medium text-white focus:outline-none focus:ring-4'
            )}
          >
            {category}
          </a>
        );
      })
    }
  </div>
</div>
