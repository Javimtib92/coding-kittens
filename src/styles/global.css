@import url('/fonts/BarlowCondensed/styles.css');
@import url('/fonts/Montserrat/styles.css');
@import url('/fonts/OxygenMono/styles.css');

:root {
  --font-display: Barlow_Condensed;
  --font-body: Montserrat;
  --font-mono: Oxygen_Mono;
  --color-background-base: #161a30;
  --color-primary-base: #31304d;
  --color-secondary-base: #b6bbc4;
  --color-accent-base: #e88009;
  --color-accent-secondary-base: #343d51;
}

* {
  font-family: var(--font-body);
  box-sizing: border-box;
  min-width: 0;
}

[x-cloak] {
  visibility: hidden !important;
}

h1,
h2,
h3,
h4,
h5 {
  font-family: var(--font-display);
  @apply font-display font-bold text-primary-600 dark:text-primary-100;
}

html {
  scrollbar-gutter: stable;
  color-scheme: var(--current-theme);
}

body {
  font-family: 'Atkinson', sans-serif;
  min-height: 100dvh;
}

p {
  text-wrap: pretty;
}

.link {
  @apply text-accent-500 hover:text-accent-400 dark:text-accent-400 dark:hover:text-accent-300;
}

.prose {
  @apply text-base text-primary-800 dark:text-primary-200;
}

.subtle {
  @apply text-xs text-primary-400 dark:text-primary-400;
}

.dark .callout-warning p,
.callout-warning p {
  @apply text-amber-700;
}

.callout p:first-child {
  @apply m-0;
}

.callout p::selection,
.callout b::selection,
.callout a::selection {
  background: white;
}

.callout a {
  @apply text-black underline underline-offset-4 opacity-60 hover:text-black hover:opacity-40 dark:text-black dark:hover:text-black dark:hover:opacity-40;
}

.astro-code span {
  @apply font-mono text-sm;
}

.dark .astro-code,
.dark .astro-code span {
  color: var(--shiki-dark) !important;
  background-color: var(--shiki-dark-bg) !important;
  /* Optional, if you also want font styles */
  font-style: var(--shiki-dark-font-style) !important;
  font-weight: var(--shiki-dark-font-weight) !important;
  text-decoration: var(--shiki-dark-text-decoration) !important;
}

.blockquote > p {
  @apply my-0 font-medium italic leading-relaxed text-primary-500 dark:text-primary-100;
}

.list-item > p {
  @apply my-0 inline;
}

code:not(:has(span)) {
  @apply inline rounded py-[2px] font-mono text-sm;
  white-space: nowrap;
  font-weight: bold;
  padding-inline-start: 4px;
  padding-inline-end: 4px;
  background-color: color-mix(
    in srgb,
    var(--color-accent-secondary-base) 10%,
    white
  );
  color: color-mix(in srgb, var(--color-accent-secondary-base) 80%, white);
}

.dark code:not(:has(span)) {
  background-color: color-mix(
    in srgb,
    var(--color-accent-secondary-base) 100%,
    white
  );
  color: color-mix(in srgb, var(--color-accent-secondary-base) 20%, white);
}

.has-focused span[data-line]:not(.focused) {
  opacity: 0.7;
  transition:
    filter 0.35s,
    opacity 0.35s;
  filter: blur(0.095rem);
}

span[data-line][data-highlighted-line] {
  @apply !bg-primary-100 dark:!bg-background-700;
}

span[data-line].diff.remove {
  @apply -mx-6 bg-red-600/[.16] px-6 opacity-70 dark:bg-red-400/[.16];
}
span[data-line].diff.remove:before {
  content: '-';
  @apply absolute text-red-500 dark:text-red-400;
}

span[data-line].diff.add {
  @apply -mx-6 bg-green-400/[.16] px-6 dark:bg-green-400/[.16];
}
span[data-line].diff.add:before {
  content: '+';
  @apply absolute text-green-500 dark:text-green-400;
}

pre {
  overflow-x: auto;
  font-weight: 400;
  line-height: 1.7142857;
  border-radius: 0.375rem;
  padding: 1.5rem;
}

a {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.title-link:hover > .anchor,
.title-link:focus > .anchor {
  visibility: visible;
}
