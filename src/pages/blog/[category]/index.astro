---
import { getCollection } from 'astro:content';
import RootLayout from '../../../layouts/RootLayout.astro';
import ArticleItem from '../../../components/ArticleItem.astro';
import CategoriesList from '../../../components/CategoriesList.astro';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const postsByCategory = new Map();
  const posts = (
    await getCollection('blog', ({ data }) => {
      return import.meta.env.PROD ? data.draft !== true : true;
    })
  ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  for (const post of posts) {
    const category = post.id.split('/')[0];

    if (!postsByCategory.get(category)) {
      postsByCategory.set(category, []);
    }

    postsByCategory.set(category, [...postsByCategory.get(category), post]);
  }

  return Array.from(postsByCategory.entries()).map(([category, posts]) => ({
    params: { category },
    props: {
      posts,
    },
  }));
}

type Props = { posts: CollectionEntry<'blog'>[] };

const { posts } = Astro.props;

const { category } = Astro.params;
---

<RootLayout
  title={`Blog | ${category} | Javier MuÃ±oz Tous`}
  shortDescription={`Find information and tutorials about ${category} in Coding Kittens.`}
>
  <CategoriesList />
  <div class='mx-auto my-0 flex max-w-7xl flex-wrap justify-between pb-0'>
    <main class='flex-1 pb-14 lg:flex-[0_0_770px]'>
      <div class='divide-y divide-gray-200 dark:divide-gray-700'>
        {
          posts.map(async (post) => {
            const { remarkPluginFrontmatter } = await post.render();
            return (
              <ArticleItem
                slug={post.slug}
                readingTime={remarkPluginFrontmatter.readingTime}
                {...post.data}
              />
            );
          })
        }
      </div>
    </main>
  </div>
</RootLayout>
